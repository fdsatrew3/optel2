@model Optel2.Models.Extruder

@{
    ViewBag.Title = "Create new extruder data";
}

<h2>Create new extruder data</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
			<div class="">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Min allowed width</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.WidthMin, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.WidthMin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Max allowed width</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.WidthMax, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.WidthMax, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Min allowed thickness</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.ThicknessMin, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.ThicknessMin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Max allowed thickness</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.ThicknessMax, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.ThicknessMax, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Min allowed production speed</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.ProductionSpeedMin, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.ProductionSpeedMin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Max allowed production speed</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.ProductionSpeedMax, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.ProductionSpeedMax, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Min allowed diameter</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.DiameterMin, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.DiameterMin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Max allowed diameter</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.DiameterMax, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.DiameterMax, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Min allowed weight</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.WeightMin, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.WeightMin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Max allowed weight</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.WeightMax, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.WeightMax, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Min allowed length</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.LengthMin, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.LengthMin, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Max allowed length</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.LengthMax, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.LengthMax, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Width adjustment duration</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.WidthAdjustmentTime, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.WidthAdjustmentTime, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Change of thickness duration</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.ChangeOfThicknessTime, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.ChangeOfThicknessTime, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Width adjustment consumption</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.WidthAdjustmentConsumption, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.WidthAdjustmentConsumption, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Change of thickness consumption</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.ChangeOfThicknessConsumption, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.ChangeOfThicknessConsumption, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Startup delay</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.StartupDelay, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.StartupDelay, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="control-label" style="text-align: left; margin-left: 10px;">
				<b>Machine hour cost</b>
			</div>
			<div class="">
				@Html.EditorFor(model => model.MachineHourCost, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
				@Html.ValidationMessageFor(model => model.MachineHourCost, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            <div class="">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
