@model IEnumerable<Optel2.Models.Extruder>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WidthMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WidthMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ThicknessMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ThicknessMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductionSpeedMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductionSpeedMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DiameterMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DiameterMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeightMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeightMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LengthMin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LengthMax)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WidthAdjustmentTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ChangeOfThicknessTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartupDelay)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MachineHourCost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WidthAdjustmentConsumption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ChangeOfThicknessConsumption)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WidthMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WidthMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThicknessMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThicknessMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductionSpeedMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductionSpeedMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DiameterMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DiameterMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WeightMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WeightMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LengthMin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LengthMax)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WidthAdjustmentTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChangeOfThicknessTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartupDelay)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MachineHourCost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WidthAdjustmentConsumption)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ChangeOfThicknessConsumption)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
